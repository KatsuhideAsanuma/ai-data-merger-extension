{
    "name": "ai-data-merger-extension",
    "displayName": "%extension.displayName%",
    "description": "%extension.description%",
    "version": "0.1.0",
    "engines": {
      "vscode": "^1.60.0"
    },
    "categories": [
      "Other"
    ],
    "activationEvents": [
      "onCommand:extension.addFileToQueue",
      "onCommand:extension.clearQueue",
      "onCommand:extension.generateMergedFile",
      "onCommand:extension.reexecuteMerge",
      "onCommand:extension.changeFileCategory",
      "onCommand:extension.removeFileFromQueue",
      "onCommand:extension.moveFileUp",
      "onCommand:extension.moveFileDown",
      "onCommand:extension.loadProjectMergeList",
      "onCommand:extension.addHistoryToMergeList",
      "onCommand:extension.createPromptTemplate",
      "onCommand:extension.createSimplePrompt",
      "onCommand:extension.generateFromTemplate",
      "onCommand:extension.editPrompt",
      "onCommand:extension.previewPrompt",
      "onCommand:extension.insertSnippet",
      "onCommand:extension.addPromptToQueue",
      "onCommand:extension.insertMergedDataToPrompt",
      "onCommand:extension.exportPrompts",
      "onCommand:extension.importPrompts",
      "onCommand:extension.createPromptFromFile",
      "onCommand:extension.savePromptAsFile",
      "onCommand:extension.backupPromptsLibrary",
      "onCommand:extension.restorePromptsLibrary",
      "onView:promptsTreeView"
    ],
    "main": "./out/extension.js",
    "contributes": {
      "commands": [
        {
          "command": "extension.addFileToQueue",
          "title": "%commands.addFileToQueue.title%",
          "icon": "$(add)"
        },
        {
          "command": "extension.clearQueue",
          "title": "%commands.clearQueue.title%",
          "icon": "$(trash)"
        },
        {
          "command": "extension.generateMergedFile",
          "title": "%commands.generateMergedFile.title%",
          "icon": "$(merge)"
        },
        {
          "command": "extension.reexecuteMerge",
          "title": "%commands.reexecuteMerge.title%",
          "icon": "$(history)"
        },
        {
          "command": "extension.changeFileCategory",
          "title": "%commands.changeFileCategory.title%",
          "icon": "$(symbol-folder)"
        },
        {
          "command": "extension.removeFileFromQueue",
          "title": "%commands.removeFileFromQueue.title%",
          "icon": "$(trash)"
        },
        {
          "command": "extension.moveFileUp",
          "title": "%commands.moveFileUp.title%",
          "icon": "$(arrow-up)"
        },
        {
          "command": "extension.moveFileDown",
          "title": "%commands.moveFileDown.title%",
          "icon": "$(arrow-down)"
        },
        {
          "command": "extension.loadProjectMergeList",
          "title": "%commands.loadProjectMergeList.title%",
          "icon": "$(notebook)"
        },
        {
          "command": "extension.addHistoryToMergeList",
          "title": "%commands.addHistoryToMergeList.title%",
          "icon": "$(add)"
        },
        {
          "command": "extension.createPromptTemplate",
          "title": "%commands.createPromptTemplate.title%",
          "icon": "$(file-add)"
        },
        {
          "command": "extension.createSimplePrompt",
          "title": "%commands.createSimplePrompt.title%",
          "icon": "$(new-file)"
        },
        {
          "command": "extension.generateFromTemplate",
          "title": "%commands.generateFromTemplate.title%",
          "icon": "$(debug-step-over)"
        },
        {
          "command": "extension.editPrompt",
          "title": "%commands.editPrompt.title%",
          "icon": "$(edit)"
        },
        {
          "command": "extension.previewPrompt",
          "title": "%commands.previewPrompt.title%",
          "icon": "$(preview)"
        },
        {
          "command": "extension.insertSnippet",
          "title": "%commands.insertSnippet.title%",
          "icon": "$(symbol-snippet)"
        },
        {
          "command": "extension.addPromptToQueue",
          "title": "%commands.addPromptToQueue.title%",
          "icon": "$(add)"
        },
        {
          "command": "extension.insertMergedDataToPrompt",
          "title": "%commands.insertMergedDataToPrompt.title%",
          "icon": "$(insert)"
        },
        {
          "command": "extension.exportPrompts",
          "title": "%commands.exportPrompts.title%",
          "icon": "$(export)"
        },
        {
          "command": "extension.importPrompts",
          "title": "%commands.importPrompts.title%",
          "icon": "$(import)"
        },
        {
          "command": "extension.createPromptFromFile",
          "title": "%commands.createPromptFromFile.title%",
          "icon": "$(file-add)"
        },
        {
          "command": "extension.savePromptAsFile",
          "title": "%commands.savePromptAsFile.title%",
          "icon": "$(save-as)"
        },
        {
          "command": "extension.backupPromptsLibrary",
          "title": "%commands.backupPromptsLibrary.title%",
          "icon": "$(archive)"
        },
        {
          "command": "extension.restorePromptsLibrary",
          "title": "%commands.restorePromptsLibrary.title%",
          "icon": "$(unarchive)"
        },
        {
          "command": "ai-data-merger.createTemplate",
          "title": "%commands.aiDM.createTemplate.title%",
          "category": "AI Data Merger"
        },
        {
          "command": "ai-data-merger.editTemplate",
          "title": "%commands.aiDM.editTemplate.title%",
          "category": "AI Data Merger"
        },
        {
          "command": "ai-data-merger.editTemplateVariables",
          "title": "%commands.aiDM.editTemplateVariables.title%",
          "category": "AI Data Merger"
        },
        {
          "command": "ai-data-merger.generateFromTemplate",
          "title": "%commands.aiDM.generateFromTemplate.title%",
          "category": "AI Data Merger"
        },
        {
          "command": "ai-data-merger.deleteTemplate",
          "title": "%commands.aiDM.deleteTemplate.title%",
          "category": "AI Data Merger"
        }
      ],
      "viewsContainers": {
        "activitybar": [
          {
            "id": "aiDataMerger",
            "title": "%views.aiDataMerger.title%",
            "icon": "resources/icon_transparent.png"
          }
        ]
      },
      "views": {
        "aiDataMerger": [
          {
            "id": "selectionTreeView",
            "name": "%views.selectionTreeView.title%"
          },
          {
            "id": "historyTreeView",
            "name": "%views.historyTreeView.title%"
          },
          {
            "id": "promptsTreeView",
            "name": "%views.promptsTreeView.title%"
          }
        ]
      },
      "menus": {
        "explorer/context": [
          {
            "command": "extension.addFileToQueue",
            "title": "%commands.addFileToQueue.title%",
            "when": "explorerResourceIsFolder || resourceLangId == markdown || resourceLangId == plaintext || resourceLangId == javascript || resourceLangId == typescript || resourceLangId == json || resourceLangId == yaml || resourceLangId == python || resourceLangId == java || resourceLangId == cpp || resourceLangId == c || resourceLangId == csharp || resourceLangId == go || resourceLangId == rust || resourceLangId == ruby || resourceLangId == php || resourceLangId == html || resourceLangId == css || resourceLangId == xml || resourceLangId == bat || resourceLangId == shellscript || resourceLangId == sql || resourceLangId == scala || resourceLangId == kotlin || resourceLangId == swift || resourceLangId == dart || resourceLangId == groovy || resourceLangId == r || resourceLangId == powershell || resourceLangId == perl || resourceLangId == lua || resourceLangId == clojure || resourceLangId == fsharp || resourceLangId == coffeescript || resourceLangId == jsonc || resourceLangId == ignore || resourceLangId == gitignore", 
            "group": "navigation"
          },
          {
            "command": "extension.createPromptFromFile",
            "title": "%commands.createPromptFromFile.title%",
            "when": "resourceLangId == markdown || resourceLangId == plaintext",
            "group": "navigation"
          }
        ],
        "view/title": [
          {
            "command": "extension.generateMergedFile",
            "when": "view == selectionTreeView",
            "group": "navigation"
          },
          {
            "command": "extension.clearQueue",
            "when": "view == selectionTreeView",
            "group": "navigation"
          },
          {
            "command": "extension.loadProjectMergeList",
            "when": "view == selectionTreeView",
            "group": "navigation"
          },
          {
            "command": "extension.createPromptTemplate",
            "when": "view == promptsTreeView",
            "group": "navigation"
          },
          {
            "command": "extension.createSimplePrompt",
            "when": "view == promptsTreeView",
            "group": "navigation"
          },
          {
            "command": "extension.importPrompts",
            "when": "view == promptsTreeView",
            "group": "navigation"
          },
          {
            "command": "extension.exportPrompts",
            "when": "view == promptsTreeView",
            "group": "navigation"
          }
        ],
        "view/item/context": [
          {
            "command": "extension.changeFileCategory",
            "when": "view == selectionTreeView && viewItem == file",
            "group": "inline"
          },
          {
            "command": "extension.removeFileFromQueue",
            "when": "view == selectionTreeView && viewItem == file",
            "group": "inline"
          },
          {
            "command": "extension.moveFileUp",
            "when": "view == selectionTreeView && viewItem == file",
            "group": "inline"
          },
          {
            "command": "extension.moveFileDown",
            "when": "view == selectionTreeView && viewItem == file",
            "group": "inline"
          },
          {
            "command": "extension.addHistoryToMergeList",
            "title": "%commands.addHistoryToMergeList.title%",
            "when": "view == historyTreeView && viewItem == historyItem",
            "group": "inline"
          },
          {
            "command": "extension.editPrompt",
            "when": "view == promptsTreeView && (viewItem == promptTemplate || viewItem == promptSimpleText)",
            "group": "inline"
          },
          {
            "command": "extension.generateFromTemplate", 
            "when": "view == promptsTreeView && viewItem == promptTemplate",
            "group": "inline"
          },
          {
            "command": "extension.addPromptToQueue",
            "when": "view == promptsTreeView && viewItem == promptSimpleText",
            "group": "inline"
          },
          {
            "command": "ai-data-merger.editTemplate",
            "when": "view == templateTreeView && viewItem == template",
            "group": "edit"
          },
          {
            "command": "ai-data-merger.editTemplateVariables",
            "when": "view == templateTreeView && viewItem == template",
            "group": "edit"
          },
          {
            "command": "ai-data-merger.generateFromTemplate",
            "when": "view == templateTreeView && viewItem == template",
            "group": "generate"
          },
          {
            "command": "ai-data-merger.deleteTemplate",
            "when": "view == templateTreeView && viewItem == template",
            "group": "delete"
          }
        ]
      },
      "configuration": {
        "type": "object",
        "title": "AI Data Merger Configuration",
        "properties": {
          "aiDataMerger.outputPath": {
            "type": "string",
            "default": "./merged",
            "description": "%configuration.outputPath%"
          },
          "aiDataMerger.defaultFileName": {
            "type": "string",
            "default": "merged_data.md",
            "description": "%configuration.defaultFileName%"
          },
          "aiDataMerger.allowedFileTypes": {
            "type": "array",
            "default": [
              "markdown",
              "plaintext",
              "json",
              "yaml",
              "javascript",
              "typescript",
              "python",
              "java",
              "cpp",
              "c",
              "csharp",
              "go",
              "rust",
              "ruby",
              "php",
              "html",
              "css",
              "xml",
              "shellscript",
              "bat",
              "sql",
              "scala",
              "kotlin",
              "swift",
              "dart",
              "groovy",
              "r",
              "powershell",
              "perl",
              "lua",
              "clojure",
              "fsharp",
              "coffeescript"
            ],
            "description": "%configuration.allowedFileTypes%"
          },
          "aiDataMerger.showDataFileContent": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.showDataFileContent%"
          },
          "aiDataMerger.categories": {
            "type": "array",
            "default": [
              "プロンプト出力",
              "設計書出力",
              "参照コード出力"
            ],
            "description": "%configuration.categories%"
          },
          "aiDataMerger.promptsStoragePath": {
            "type": "string",
            "default": "./prompts",
            "description": "%configuration.promptsStoragePath%"
          },
          "aiDataMerger.promptCategories": {
            "type": "array",
            "default": [
              "コード生成",
              "説明要求",
              "要約",
              "デバッグ",
              "一般"
            ],
            "description": "%configuration.promptCategories%"
          },
          "aiDataMerger.maxTokenWarningThreshold": {
            "type": "number",
            "default": 4000,
            "description": "%configuration.maxTokenWarningThreshold%"
          },
          "aiDataMerger.promptSnippets": {
            "type": "array",
            "default": [
              {
                "name": "コード説明",
                "text": "以下のコードについて説明してください："
              },
              {
                "name": "バグ修正",
                "text": "以下のコードにあるバグを見つけて修正してください："
              },
              {
                "name": "リファクタリング",
                "text": "以下のコードをより効率的にリファクタリングしてください："
              }
            ],
            "description": "%configuration.promptSnippets%"
          }
        }
      }
    },
    "scripts": {
      "vscode:prepublish": "npm run compile",
      "compile": "tsc -p ./",
      "package": "vsce package"
    },
    "publisher": "katsuhide-asanuma",
    "devDependencies": {
      "@types/node": "^14.0.0",
      "@vscode/vsce": "^3.3.2",
      "typescript": "^4.0.0",
      "vscode": "^1.1.37"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/katsuhideAsanuma/ai-data-merger-extension.git"
    },
    "icon": "resources/icon.png"
  }
  